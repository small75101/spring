<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- proxy-target-class 默认为false 即使用JDK动态代理织入增强，配置为true 使用CGLIB动态代理 -->
	<aop:config proxy-target-class="false">
		<aop:aspect ref="adviceMethods">
			<aop:before method="preGreeting" pointcut="target(com.ranq.spring4.ch3.aop.domain.NativeWaterBizImpl) and execution(* greetTo(..))" />
		</aop:aspect>
		<!-- adviceMethods 增强方法所在的类 preGreeting 增强方法 -->
	</aop:config>
	<bean id="adviceMethods" class="com.ranq.spring4.ch3.aop.aspect.AdviceMethods"></bean>
	<bean id="nativeWaterBizImpl" class="com.ranq.spring4.ch3.aop.domain.NativeWaterBizImpl" />

	<!-- 配置命名切点 -->
	<!-- 使用<aop:pointcut>定义一个切点 id命名 切面中使用pointcut-ref引用 这样与 <aop:before>一样 -->
	<!-- 除引介增强以外，其他任何增强都拥有3个属性 pointcut,pointcut-ref,method -->
	<!-- 切点如果定义在<aop:aspect>元素中 则命名切点只能被当前<aop:aspect>内定义的元素访问，注意顺序 -->
	<!-- 切点如果定义在<aop:config>元素中 则命名切点能被整个该<aop:config>内定义的元素访问，注意顺序 -->
	<!-- 切点配置例子： <aop:pointcut id="greetToPointcut" expression="target(com.ranq.spring4.ch3.aop.domain.NativeWaterBizImpl) and execution(*
		greetTo(..))"/> -->

	<!-- 后置增强配置 -->
	<!--<aop:after-returning method="afterReturning" pointcut="target(com.ranq.spring4.ch3.aop.domain.NativeWaterBizImpl)" returning="
		retVal"/> -->
	<!-- returning属性必须和增强方法入参名一直 可选 -->

	<!-- 环绕增强配置 -->
	<!--<aop:around method="aroundMethod" pointcut="target(com.ranq.spring4.ch3.aop.domain.NativeWaterBizImpl)"/> -->
	<!--对应的方法可以将第一个入参声明为ProceedingJoinPoint -->

	<!-- 抛出异常增强配置 -->
	<!--<aop:after-throwing method="afterThrowingMethod" pointcut="target(com.ranq.spring4.ch3.aop.domain.NativeWaterBizImpl)" throwing="iae"/> -->
	<!--iae 通过iae查找增强方法对应名称的入参，进而获取需要增强的连接点的匹配异常类型为IllegalArgumentExeception -->
	<!-- 通过throwing属性声明需要绑定的异常对象，指定的异常名必须和增强方法对应的入参名一直 -->

	<!-- Final增强配置 -->
	<!--<aop:after method="afterMethod" pointcut="execution(* com..*.Waiter.greetTo(..))"/> -->
	<!--iae 通过iae查找增强方法对应名称的入参，进而获取需要增强的连接点的匹配异常类型为IllegalArgumentExeception -->
	<!-- 通过throwing属性声明需要绑定的异常对象，指定的异常名必须和增强方法对应的入参名一直 -->
	
	<!-- 引介增强配置 -->
</beans>